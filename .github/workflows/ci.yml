---
name: "Continuous Integration"

on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/**'
    branches:
      - "main"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
            comp_er: 7z
            comp_args: 'a -tzip'
            comp_type: zip
    runs-on: ${{ matrix.os }}
    env:
      Binary_name: ddump
    name: Compile ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
      - id: get_repository_name
        run: echo ::set-output name=REPO_NAME::${{ github.event.repository.name }}
        shell: bash
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin ${{ env.Binary_name }}
      - name: Compress things up
        run: |
          cp ./target/release/${{ env.Binary_name }}${{ matrix.suffix }} ./
          ${{ matrix.comp_er }} `
            ${{ matrix.comp_args }} `
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}.${{ matrix.comp_type }} `
            ${{ env.Binary_name }}${{ matrix.suffix }}
          ls
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}
          path: |
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-${{ matrix.target }}.${{ matrix.comp_type }}
          retention-days: 5

  pre-release:
    needs: build
    name: "Pre-release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: get_repository_name
        run: echo ::set-output name=REPO_NAME::${{ github.event.repository.name }}
        shell: bash
      - uses: actions/download-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-pc-windows-msvc
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ${{ steps.get_repository_name.outputs.REPO_NAME }}-x86_64-pc-windows-msvc.zip
